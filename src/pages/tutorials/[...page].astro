---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import { Card, Pagination } from 'accessible-astro-components'
import CourseSearch from '@components/CourseSearch.astro'
import { CMS_URL, FEED_URL } from '@globals'

export async function getStaticPaths({ paginate }) {
  const response = await fetch(FEED_URL)
  const data = await response.json()

  const tutorials = data.items.tutorials.filter((tutorial) => tutorial.live);

  return paginate(tutorials, { pageSize: 6 })
}

const { page } = Astro.props
---
<DefaultLayout
  title="Tutorials"
  description="This page fetches the take 5 tutorials via a JSON feed provided by the gymcms."
>
  <section>
    <h1>Tutorials</h1>
    <p>
      This page fetches the tutorials via a JSON feed provided by the gymcms: <a href={FEED_URL}>{FEED_URL}</a>.
    </p>
  </section>
  <section>
    <CourseSearch dataType="tutorials" />
  </section>
  <section>
    <p class="text-sm"><em>Tutorial {page.start + 1} through {page.end + 1} of {page.total} total tutorials.</em></p>
    <ul class="my-3">
      {
        page.data.map((tutorial) => (
          <li>
            <Card
              url={`/tutorials/${tutorial.title.replaceAll(' ', '-').toLowerCase()}`}
              title={tutorial.title}
              footer={tutorial.topic}
              img={`${CMS_URL}${tutorial.img}`}
            >
              {tutorial.description}
            </Card>
          </li>
        ))
      }
    </ul>
    <div class="mt-12 grid place-content-center">
      <Pagination
        firstPage={page.url.prev ? '/tutorials/' : null}
        previousPage={page.url.prev ? page.url.prev : null}
        nextPage={page.url.next ? page.url.next : null}
        lastPage={page.url.next ? `/tutorials/${Math.round(page.total / page.size)}` : null}
        currentPage={page.currentPage}
        totalPages={Math.round(page.total / page.size)}
      />
    </div>
  </section>
</DefaultLayout>

<!-- <style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style> -->
