---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import { Card, Pagination } from 'accessible-astro-components'
import SearchBar from '@components/SearchBar.astro'

export async function getStaticPaths({ paginate }) {
  const response = await fetch('http://localhost:4000/feeds/courses.json')
  const data = await response.json()

  const courses = data.courses.filter((course) => course.live);
  // console.log(data)
  return paginate(courses, { pageSize: 6 })
}

const { page } = Astro.props
---

<DefaultLayout
  title="Courses"
  description="This page fetches the courses via a JSON feed provided by the gymcms."
>
  <section class="my-12">
    <div class="space-content container">
      <h1>Courses</h1>
      <p class="text-2xl">
        This page fetches the courses via a JSON feed provided by the gymcms: <a href="http://localhost:4000/feeds/courses.json"
          >courses.json</a
        >.
      </p>
    </div>
  </section>
  <section>
    <SearchBar />
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Course {page.start + 1} through {page.end + 1} of {page.total} total courses</em></p>
      <ul class="my-3">
        {
          page.data.map((course) => (
            <li>
              <Card
                url={'/courses/' + course.title.replaceAll(' ', '-').toLowerCase()}
                title={course.title}
                footer={course.topic}
                img={course.img}
              >
                {course.description}
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/courses/' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/courses/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
